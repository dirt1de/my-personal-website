filter(status=="Failed", total_death!=0)%>%
ggplot(aes(x = time, y = highpoint_metres))+
geom_point(aes(size = total_death), alpha = 0.4)+
theme(
panel.grid.major = element_blank(),
axis.ticks = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_rect(fill =  "aliceblue"),
plot.background = element_rect(fill ="aliceblue"),
legend.background = element_rect(fill ="aliceblue"),
legend.key = element_rect(fill ="aliceblue") )
members%>%filter(peak_name=="Everest")%>%
ggplot(aes(x= injury_height_metres))+
geom_histogram(fill = "lightskyblue3", color = "white")+
theme(
panel.grid.major = element_blank(),
axis.ticks = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_rect(fill =  "aliceblue"),
plot.background = element_rect(fill ="aliceblue")
)
expeditions%>%filter(peak_name%in%common_mounts$peak_name)%>%
mutate(status = case_when(str_detect(termination_reason, "Success")~"Success",
TRUE~"Failed"))%>%
mutate(total_member = members+hired_staff,
hired_ratio = hired_staff/total_member)%>%
group_by(peak_name)%>%summarise(success_rate = mean(status=="Success",na.rm = TRUE),
hired_ratio = mean(hired_ratio,na.rm = TRUE))%>%
ggplot(aes(x = hired_ratio, y = success_rate))+
geom_point()+
geom_text(aes(label = peak_name),check_overlap = TRUE,vjust = -1)+
geom_smooth()+
labs(x = "Hired Ratio", y = "Success rate",
title = "The relationship between hired ratio and success rate")+
theme(
plot.title = element_text(face = "bold"),
panel.grid.major = element_blank(),
axis.ticks = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_rect(fill =  "aliceblue"),
plot.background = element_rect(fill ="aliceblue"),
legend.background = element_rect(fill ="aliceblue"))+
scale_fill_brewer(palette = "Paired")+
lims(x = c(-0.04,0.43))
top_countries<-peaks%>%filter(!is.na(first_ascent_country), first_ascent_year>1000)%>%
separate_rows(first_ascent_country,sep = ", ")%>%
count(first_ascent_country,sort = TRUE)%>%head(10)
ggplotly(peaks%>%filter(!is.na(first_ascent_country),
first_ascent_year>1000)%>%
separate_rows(first_ascent_country,sep = ", ")%>%
add_count(first_ascent_country,sort = TRUE)%>%
filter(first_ascent_country%in%top_countries$first_ascent_country)%>%
mutate(first_ascent_country = reorder(first_ascent_country,n))%>%
ggplot(aes(x = first_ascent_year, y = first_ascent_country))+
geom_point(aes(size = height_metres),alpha = 0.3))+
theme(
plot.title = element_text(face = "bold"),
panel.grid.major = element_blank(),
axis.ticks = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_rect(fill =  "aliceblue"),
plot.background = element_rect(fill ="aliceblue"),
legend.background = element_rect(fill ="aliceblue"),
legend.key =  element_rect(fill ="aliceblue"))
top_countries<-peaks%>%filter(!is.na(first_ascent_country), first_ascent_year>1000)%>%
separate_rows(first_ascent_country,sep = ", ")%>%
count(first_ascent_country,sort = TRUE)%>%head(10)
ggplotly(peaks%>%filter(!is.na(first_ascent_country),
first_ascent_year>1000)%>%
separate_rows(first_ascent_country,sep = ", ")%>%
add_count(first_ascent_country,sort = TRUE)%>%
filter(first_ascent_country%in%top_countries$first_ascent_country)%>%
mutate(first_ascent_country = reorder(first_ascent_country,n))%>%
ggplot(aes(x = first_ascent_year, y = first_ascent_country))+
geom_point(aes(size = height_metres),alpha = 0.3))+
theme(
plot.title = element_text(face = "bold"),
panel.grid.major = element_blank(),
axis.ticks = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_rect(fill =  "aliceblue"),
plot.background = element_rect(fill ="aliceblue"),
legend.background = element_rect(fill ="aliceblue"),
legend.key =  element_rect(fill ="aliceblue"))
top_countries<-peaks%>%filter(!is.na(first_ascent_country), first_ascent_year>1000)%>%
separate_rows(first_ascent_country,sep = ", ")%>%
count(first_ascent_country,sort = TRUE)%>%head(10)
ggplotly(peaks%>%filter(!is.na(first_ascent_country),
first_ascent_year>1000)%>%
separate_rows(first_ascent_country,sep = ", ")%>%
add_count(first_ascent_country,sort = TRUE)%>%
filter(first_ascent_country%in%top_countries$first_ascent_country)%>%
mutate(first_ascent_country = reorder(first_ascent_country,n))%>%
ggplot(aes(x = first_ascent_year, y = first_ascent_country))+
geom_point(aes(size = height_metres),alpha = 0.3))
top_countries<-peaks%>%filter(!is.na(first_ascent_country), first_ascent_year>1000)%>%
separate_rows(first_ascent_country,sep = ", ")%>%
count(first_ascent_country,sort = TRUE)%>%head(10)
ggplotly(peaks%>%filter(!is.na(first_ascent_country),
first_ascent_year>1000)%>%
separate_rows(first_ascent_country,sep = ", ")%>%
add_count(first_ascent_country,sort = TRUE)%>%
filter(first_ascent_country%in%top_countries$first_ascent_country)%>%
mutate(first_ascent_country = reorder(first_ascent_country,n))%>%
ggplot(aes(x = first_ascent_year, y = first_ascent_country))+
geom_point(aes(size = height_metres),alpha = 0.3)+
theme(
plot.title = element_text(face = "bold"),
panel.grid.major = element_blank(),
axis.ticks = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_rect(fill =  "aliceblue"),
plot.background = element_rect(fill ="aliceblue"),
legend.background = element_rect(fill ="aliceblue"),
legend.key =  element_rect(fill ="aliceblue")))
peaks%>%filter(!is.na(first_ascent_country),
first_ascent_year>1000)%>%
separate_rows(first_ascent_country,sep = ", ")%>%
add_count(first_ascent_country,sort = TRUE)%>%
filter(first_ascent_country%in%top_countries$first_ascent_country)%>%
mutate(first_ascent_country = reorder(first_ascent_country,n))%>%
ggplot(aes(x = first_ascent_year, y = first_ascent_country))+
geom_point(aes(size = height_metres),alpha = 0.3)+
theme(
plot.title = element_text(face = "bold"),
panel.grid.major = element_blank(),
axis.ticks = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_rect(fill =  "aliceblue"),
plot.background = element_rect(fill ="aliceblue"),
legend.background = element_rect(fill ="aliceblue"),
legend.key =  element_rect(fill ="aliceblue"))
plot.title = element_text(face = "bold"),
members_clean%>%
filter(!is.na(sex),
!is.na(age))%>%
add_count(sex,age,sort = TRUE)%>%
filter(n >10)%>%
group_by(sex,age)%>%
summarise(success_rate = mean(success == "TRUE"))%>%
ggplot(aes(x = age, y = success_rate, color = sex))+
geom_point()+geom_line()+
theme(
plot.title = element_text(face = "bold"),
panel.grid.major = element_blank(),
axis.ticks = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_rect(fill =  "aliceblue"),
plot.background = element_rect(fill ="aliceblue"),
legend.background = element_rect(fill ="aliceblue"),
legend.key = element_rect(fill ="aliceblue"))+
scale_color_brewer(palette = "Paired")+
facet_wrap(~sex)
members_clean%>%
filter(!is.na(sex),
!is.na(age))%>%
add_count(sex,age,sort = TRUE)%>%
filter(n >10)%>%
group_by(sex,age)%>%
summarise(success_rate = mean(success == "TRUE"))%>%
ggplot(aes(x = age, y = success_rate, color = sex))+
geom_point()+geom_line()+
theme(
plot.title = element_text(face = "bold"),
panel.grid.major = element_blank(),
axis.ticks = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_rect(fill =  "aliceblue"),
plot.background = element_rect(fill ="aliceblue"),
legend.background = element_rect(fill ="aliceblue"),
legend.key = element_rect(fill ="aliceblue"))+
scale_color_brewer(palette = "Paired")+
facet_wrap(~sex)
members_clean<-members%>%select(sex, age, citizenship, expedition_role,success)
top_citizens<-members_clean%>%count(citizenship,sort = TRUE)%>%head(15)
members_clean%>%
filter(citizenship%in%top_citizens$citizenship)%>%
group_by(citizenship)%>%
summarise(success_rate = mean(success == "TRUE"))%>%
ggplot(aes(x = success_rate, y = reorder(citizenship,success_rate)))+
geom_point(size = 4, color = "skyblue3")+
geom_segment(aes(x = 0, xend = success_rate, y = citizenship, yend = citizenship),
size = 2.3,
alpha = 0.5, color = "skyblue3" )+
theme(
plot.title = element_text(face = "bold"),
panel.grid.major = element_blank(),
axis.ticks = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_rect(fill =  "aliceblue"),
plot.background = element_rect(fill ="aliceblue"),
legend.background = element_rect(fill ="aliceblue"))
members_clean%>%
filter(!is.na(sex),
!is.na(age))%>%
add_count(sex,age,sort = TRUE)%>%
filter(n >10)%>%
group_by(sex,age)%>%
summarise(success_rate = mean(success == "TRUE"))%>%
ggplot(aes(x = age, y = success_rate, color = sex))+
geom_point()+geom_line()+
theme(
plot.title = element_text(face = "bold"),
panel.grid.major = element_blank(),
axis.ticks = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_rect(fill =  "aliceblue"),
plot.background = element_rect(fill ="aliceblue"),
legend.background = element_rect(fill ="aliceblue"),
legend.key = element_rect(fill ="aliceblue"))+
scale_color_brewer(palette = "Paired")+
facet_wrap(~sex)
plot.title = element_text(face = "bold"),
members_clean%>%
filter(!is.na(sex),
!is.na(age))%>%
add_count(sex,age,sort = TRUE)%>%
filter(n >10)%>%
group_by(sex,age)%>%
summarise(success_rate = mean(success == "TRUE"))%>%
ggplot(aes(x = age, y = success_rate, color = sex))+
geom_point()+geom_line()+
theme(
plot.title = element_text(face = "bold"),
panel.grid.major = element_blank(),
axis.ticks = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_rect(fill =  "aliceblue"),
plot.background = element_rect(fill ="aliceblue"),
legend.background = element_rect(fill ="aliceblue"),
legend.key = element_rect(fill ="aliceblue"))+
scale_color_brewer(palette = "Paired")
expeditions%>%
filter(peak_name=="Everest")%>%
mutate(status = case_when(str_detect(termination_reason, "Success")~"Success",
TRUE~"Failed"))%>%
filter(status=="Failed")%>%
mutate(total_death = member_deaths+hired_staff_deaths,
time = highpoint_date-basecamp_date)%>%
ggplot(aes(x = time, y = highpoint_metres))+
geom_point(aes(size = total_death), alpha = 0.4)+
theme(
panel.grid.major = element_blank(),
axis.ticks = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_rect(fill =  "aliceblue"),
plot.background = element_rect(fill ="aliceblue"),
legend.background = element_rect(fill ="aliceblue"),
legend.key = element_rect(fill ="aliceblue") )
expeditions%>%
mutate(status = case_when(str_detect(termination_reason, "Success")~"Success",
TRUE~"Failed"))%>%
filter(peak_name%in%common_mounts$peak_name)%>%
group_by(year,oxygen_used)%>%summarise(success_rate = mean(status == "Success"))%>%
ggplot(aes(x = year, y = success_rate, color = oxygen_used))+
geom_point()+geom_line()+
labs(x = "Year", y = "Success rate",
title = "The annual success rate in regards of oxygen usage")+
theme(
plot.title = element_text(face = "bold"),
panel.grid.major = element_blank(),
axis.ticks = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_rect(fill =  "aliceblue"),
plot.background = element_rect(fill ="aliceblue"),
legend.background = element_rect(fill ="aliceblue"),
legend.key =  element_rect(fill ="aliceblue"))+
scale_color_brewer(palette = "Paired")
gggplotly(expeditions%>%
mutate(status = case_when(str_detect(termination_reason, "Success")~"Success",
TRUE~"Failed"))%>%
filter(peak_name%in%common_mounts$peak_name)%>%
group_by(year,oxygen_used)%>%summarise(success_rate = mean(status == "Success"))%>%
ggplot(aes(x = year, y = success_rate, color = oxygen_used))+
geom_point()+geom_line()+
labs(x = "Year", y = "Success rate",
title = "The annual success rate in regards of oxygen usage")+
theme(
plot.title = element_text(face = "bold"),
panel.grid.major = element_blank(),
axis.ticks = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_rect(fill =  "aliceblue"),
plot.background = element_rect(fill ="aliceblue"),
legend.background = element_rect(fill ="aliceblue"),
legend.key =  element_rect(fill ="aliceblue"))+
scale_color_brewer(palette = "Paired"))
gggplotly(expeditions%>%
mutate(status = case_when(str_detect(termination_reason, "Success")~"Success",
TRUE~"Failed"))%>%
filter(peak_name%in%common_mounts$peak_name)%>%
group_by(year,oxygen_used)%>%summarise(success_rate = mean(status == "Success"))%>%
ggplot(aes(x = year, y = success_rate, color = oxygen_used))+
geom_point()+geom_line()+
labs(x = "Year", y = "Success rate",
title = "The annual success rate in regards of oxygen usage")+
theme(
plot.title = element_text(face = "bold"),
panel.grid.major = element_blank(),
axis.ticks = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_rect(fill =  "aliceblue"),
plot.background = element_rect(fill ="aliceblue"),
legend.background = element_rect(fill ="aliceblue"),
legend.key =  element_rect(fill ="aliceblue"))+
scale_color_brewer(palette = "Paired"))
library(plotly)
library(plotly)
gggplotly(expeditions%>%
mutate(status = case_when(str_detect(termination_reason, "Success")~"Success",
TRUE~"Failed"))%>%
filter(peak_name%in%common_mounts$peak_name)%>%
group_by(year,oxygen_used)%>%summarise(success_rate = mean(status == "Success"))%>%
ggplot(aes(x = year, y = success_rate, color = oxygen_used))+
geom_point()+geom_line()+
labs(x = "Year", y = "Success rate",
title = "The annual success rate in regards of oxygen usage")+
theme(
plot.title = element_text(face = "bold"),
panel.grid.major = element_blank(),
axis.ticks = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_rect(fill =  "aliceblue"),
plot.background = element_rect(fill ="aliceblue"),
legend.background = element_rect(fill ="aliceblue"),
legend.key =  element_rect(fill ="aliceblue"))+
scale_color_brewer(palette = "Paired"))
gggplotly(expeditions%>%
mutate(status = case_when(str_detect(termination_reason, "Success")~"Success",
TRUE~"Failed"))%>%
filter(peak_name%in%common_mounts$peak_name)%>%
group_by(year,oxygen_used)%>%summarise(success_rate = mean(status == "Success"))%>%
ggplot(aes(x = year, y = success_rate, color = oxygen_used))+
geom_point()+geom_line()+
labs(x = "Year", y = "Success rate",
title = "The annual success rate in regards of oxygen usage")+
theme(
plot.title = element_text(face = "bold"),
panel.grid.major = element_blank(),
axis.ticks = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_rect(fill =  "aliceblue"),
plot.background = element_rect(fill ="aliceblue"),
legend.background = element_rect(fill ="aliceblue"),
legend.key =  element_rect(fill ="aliceblue"))+
scale_color_brewer(palette = "Paired"))
ggplotly(expeditions%>%
mutate(status = case_when(str_detect(termination_reason, "Success")~"Success",
TRUE~"Failed"))%>%
filter(peak_name%in%common_mounts$peak_name)%>%
group_by(year,oxygen_used)%>%summarise(success_rate = mean(status == "Success"))%>%
ggplot(aes(x = year, y = success_rate, color = oxygen_used))+
geom_point()+geom_line()+
labs(x = "Year", y = "Success rate",
title = "The annual success rate in regards of oxygen usage")+
theme(
plot.title = element_text(face = "bold"),
panel.grid.major = element_blank(),
axis.ticks = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_rect(fill =  "aliceblue"),
plot.background = element_rect(fill ="aliceblue"),
legend.background = element_rect(fill ="aliceblue"),
legend.key =  element_rect(fill ="aliceblue"))+
scale_color_brewer(palette = "Paired"))
ggplotly(expeditions%>%
mutate(status = case_when(str_detect(termination_reason, "Success")~"Success",
TRUE~"Failed"))%>%
filter(peak_name%in%common_mounts$peak_name)%>%
group_by(year,oxygen_used)%>%summarise(success_rate = mean(status == "Success"))%>%
ggplot(aes(x = year, y = success_rate, color = oxygen_used))+
geom_point()+geom_line()+
labs(x = "Year", y = "Success rate",
title = "The annual success rate in regards of oxygen usage")+
theme(
plot.title = element_text(face = "bold"),
panel.grid.major = element_blank(),
axis.ticks = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_rect(fill =  "aliceblue"),
plot.background = element_rect(fill ="aliceblue"),
legend.background = element_rect(fill ="aliceblue"),
legend.key =  element_rect(fill ="aliceblue"),
legend.text = element_text(size = 11))+
scale_color_brewer(palette = "Paired"))
ggplotly(expeditions%>%
mutate(status = case_when(str_detect(termination_reason, "Success")~"Success",
TRUE~"Failed"))%>%
filter(peak_name%in%common_mounts$peak_name)%>%
group_by(year,oxygen_used)%>%summarise(success_rate = mean(status == "Success"))%>%
ggplot(aes(x = year, y = success_rate, color = oxygen_used))+
geom_point()+geom_line()+
labs(x = "Year", y = "Success rate",
title = "The annual success rate in regards of oxygen usage")+
theme(
plot.title = element_text(face = "bold"),
panel.grid.major = element_blank(),
axis.ticks = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_rect(fill =  "aliceblue"),
plot.background = element_rect(fill ="aliceblue"),
legend.background = element_rect(fill ="aliceblue"),
legend.key =  element_rect(fill ="aliceblue"),
legend.text = element_text(size = 10))+
scale_color_brewer(palette = "Paired"))
ggplotly(expeditions%>%
mutate(status = case_when(str_detect(termination_reason, "Success")~"Success",
TRUE~"Failed"))%>%
filter(peak_name%in%common_mounts$peak_name)%>%
group_by(year,oxygen_used)%>%summarise(success_rate = mean(status == "Success"))%>%
ggplot(aes(x = year, y = success_rate, color = oxygen_used))+
geom_point()+geom_line()+
labs(x = "Year", y = "Success rate",
title = "The annual success rate in regards of oxygen usage")+
theme(
plot.title = element_text(face = "bold"),
panel.grid.major = element_blank(),
axis.ticks = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_rect(fill =  "aliceblue"),
plot.background = element_rect(fill ="aliceblue"),
legend.background = element_rect(fill ="aliceblue"),
legend.key =  element_rect(fill ="aliceblue"),
legend.text = element_text(size = 10))+
scale_color_brewer(palette = "Paired"))
plot.title = element_text(face = "bold"),
ggplotlymembers_clean%>%
filter(!is.na(sex),
!is.na(age))%>%
add_count(sex,age,sort = TRUE)%>%
filter(n >10)%>%
group_by(sex,age)%>%
summarise(success_rate = mean(success == "TRUE"))%>%
ggplot(aes(x = age, y = success_rate, color = sex))+
geom_point()+geom_line()+
theme(
plot.title = element_text(face = "bold"),
panel.grid.major = element_blank(),
axis.ticks = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_rect(fill =  "aliceblue"),
plot.background = element_rect(fill ="aliceblue"),
legend.background = element_rect(fill ="aliceblue"),
legend.key = element_rect(fill ="aliceblue"))+
scale_color_brewer(palette = "Paired"))
ggplotlymembers_clean%>%
filter(!is.na(sex),
!is.na(age))%>%
add_count(sex,age,sort = TRUE)%>%
filter(n >10)%>%
group_by(sex,age)%>%
summarise(success_rate = mean(success == "TRUE"))%>%
ggplot(aes(x = age, y = success_rate, color = sex))+
geom_point()+geom_line()+
theme(
plot.title = element_text(face = "bold"),
panel.grid.major = element_blank(),
axis.ticks = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_rect(fill =  "aliceblue"),
plot.background = element_rect(fill ="aliceblue"),
legend.background = element_rect(fill ="aliceblue"),
legend.key = element_rect(fill ="aliceblue"))+
scale_color_brewer(palette = "Paired"))
ggplotly(members_clean%>%
filter(!is.na(sex),
!is.na(age))%>%
add_count(sex,age,sort = TRUE)%>%
filter(n >10)%>%
group_by(sex,age)%>%
summarise(success_rate = mean(success == "TRUE"))%>%
ggplot(aes(x = age, y = success_rate, color = sex))+
geom_point()+geom_line()+
theme(
plot.title = element_text(face = "bold"),
panel.grid.major = element_blank(),
axis.ticks = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_rect(fill =  "aliceblue"),
plot.background = element_rect(fill ="aliceblue"),
legend.background = element_rect(fill ="aliceblue"),
legend.key = element_rect(fill ="aliceblue"))+
scale_color_brewer(palette = "Paired"))
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
